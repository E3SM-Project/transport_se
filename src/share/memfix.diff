Index: prim_advection_mod.F90
===================================================================
--- prim_advection_mod.F90	(revision 1965)
+++ prim_advection_mod.F90	(working copy)
@@ -1012,12 +970,18 @@
   subroutine Prim_Advec_Init()
     use dimensions_mod, only : nlev, qsize, nelemd
 
-    call initEdgeBuffer(edgeAdv,qsize*nlev)
     call initEdgeBuffer(edgeAdv1,nlev)
+    call initEdgeBuffer(edgeAdv,qsize*nlev)
     call initEdgeBuffer(edgeAdv_p1,qsize*nlev + nlev) 
     call initEdgeBuffer(edgeAdvQ2,qsize*nlev*2)  ! Qtens,Qmin, Qmax
     call initEdgeBuffer(edgeAdvQ3,qsize*nlev*3)  ! Qtens,Qmin, Qmax
 
+    call replace_edge_buffers(edgeAdvQ2,edgeAdvQ2%nlyr,edgeAdvQ2%nbuf,edgeAdvQ3%buf,edgeAdvQ3%receive)
+    call replace_edge_buffers(edgeAdv_p1,edgeAdv_p1%nlyr,edgeAdv_p1%nbuf,edgeAdvQ3%buf,edgeAdvQ3%receive)
+    call replace_edge_buffers(edgeAdv1,edgeAdv1%nlyr,edgeAdv1%nbuf,edgeAdvQ3%buf,edgeAdvQ3%receive)
+    call replace_edge_buffers(edgeAdv,edgeAdv%nlyr,edgeAdv%nbuf,edgeAdvQ3%buf,edgeAdvQ3%receive)
+
+
     ! this static array is shared by all threads, so dimension for all threads (nelemd), not nets:nete:
     allocate (qmin(nlev,qsize,nelemd))
     allocate (qmax(nlev,qsize,nelemd))
@@ -2971,10 +2948,32 @@
 
 
 
+!
+! subroutine to force all the tracer edge buffers to share the largest buffer
+! this has to be outside a module to allow us to (F77 style) access the same chunk 
+! of memory with a different shape
+!
+subroutine replace_edge_buffers(edge,nlyr,nbuf,newbuf,newreceive)
+use kinds, only          : real_kind,int_kind
+use edge_mod, only       : EdgeBuffer_t
+! input
+type (EdgeBuffer_t) :: edge
+integer :: nlyr,nbuf
+real(kind=real_kind) , target :: newbuf(nlyr,nbuf), newreceive(nlyr,nbuf)
 
+deallocate(edge%buf)
+deallocate(edge%receive)
+edge%buf => newbuf
+edge%receive => newreceive
+end subroutine replace_edge_buffers
 
 
 
 
 
+
+
+
+
+
  
